# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 137
set hasByteEnable 0
set MemName mq_iNTT_ternary_iAem
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 512
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "000000000000000" "000000000000000" "010100011100011" "010100111000101" "010111000000011" "011000011101001" "010110011001111" "001111101010100" "011000010100001" "001001001101101" "010001000011000" "000110111011000" "011000010011110" "010111000010011" "001100011000110" "001001001100000" "001111111101110" "001111101010000" "000000101011110" "011111010000111" "001010011100101" "001100110000011" "011100100111000" "011100100111001" "011011000101101" "011110000110110" "001110101111000" "000010100101011" "011111100110001" "011011010000000" "010111110000010" "001011101010001" "000110110100100" "000001011110111" "011000001000010" "011010111101010" "010001110010101" "001111010101111" "011001000001011" "010101001011101" "011000111011111" "010011111011010" "000110111111110" "010010110001111" "010011111001100" "100011100000001" "010101000010001" "001010010110110" "011101111101110" "001010110010000" "100010101111111" "000110001110010" "011000101010000" "000110110110000" "011000111000000" "000110110001001" "011000010000000" "010001010001011" "000001110010011" "011111110110000" "000111010000010" "010110100011000" "001000111101100" "000011010011110" "001100010001111" "100010100111101" "010101100110110" "010000010000111" "000010011110010" "100010011111111" "010110011110110" "001111111101011" "001011100110101" "100000111011010" "000000001010011" "000001100011010" "010010000000101" "001111010001000" "000110111111011" "100000100110101" "100000110100010" "000011010111000" "001010100100010" "011111101011100" "001001001111111" "001001111101011" "100010111000100" "001100010010001" "100001101001010" "000101101001001" "001001001010101" "010111011111010" "001000100001011" "100000000100100" "100001000011100" "000101001101001" "100010011100101" "010011110101000" "100011100100110" "000001000111010" "100011010101000" "000101101100110" "000100000111001" "001000100010001" "011010011100010" "011111010010111" "010000100101111" "001100100010111" "010111101011000" "011001001100000" "100010000000110" "011011010111111" "001100101110100" "100011011011011" "000101010011111" "001011010101001" "010010101110010" "001101011010010" "001001111100100" "010100111101111" "100011000001100" "000100100001010" "001101110011000" "010010010101110" "000101111101000" "011111010110111" "010010011101101" "000010010000000" "011100111000010" "000100101110110" "001011000111001" "000110000110001" "001000101000001" "100011001111111" "001000111011101" "000000011011010" "000010111010110" "011011111010100" "010000101000100" "010111110010000" "010001110100011" "001010110101010" "010110110001001" "010110100111000" "001010001011111" "011110001101001" "011000011101111" "001001110011011" "001111110110111" "000101000101100" "100011010000010" "001100110011000" "010100111110110" "011010110001001" "011101100100000" "100011111111101" "010010111101000" "010101101100000" "000001001111000" "011011110110111" "001100010011100" "010110101101111" "011101110011001" "011110011100101" "001010111100010" "001010111110100" "001101100110000" "000101100011011" "000110000001000" "001111111010000" "001000001010110" "011010000101100" "000110111100110" "010101010111100" "010010101001011" "001101000111011" "001101011011101" "000100000000001" "001110000011011" "001110101101110" "001111101110100" "001101110011111" "001111001011101" "000011011001001" "100000001010110" "100001001010001" "010110110111110" "010010011001010" "010001010010100" "010111100011011" "001001110100101" "010111010000101" "001111110110000" "011001010101111" "000000011000010" "011110000101011" "011100001101110" "001011011001000" "100010111111011" "010110110110101" "000101010110001" "000000011000111" "011011011000110" "001001000110111" "001010100110000" "011011001010111" "000001000110110" "000111111110010" "000000100100000" "000100111100101" "001111010110100" "100010100000111" "001010011000000" "011011001111110" "010011001000110" "100000100011011" "001110101011010" "100000110100100" "010011100000011" "011001101011001" "100010101011001" "001101010100100" "001011110000011" "100001100001000" "011101111010101" "000101111110100" "000111111010100" "000001000110100" "011011110000011" "000010001110101" "000101111101101" "100000010100011" "100000001110100" "000010111011000" "100001011110001" "011111101111011" "000110010111101" "010101111001000" "011001010100010" "010101011001101" "000111101010101" "100010010011000" "000000101101010" "001011111110000" "010001011000111" "000100100011011" "010001000010101" "010100101111110" "000111101111111" "010100110001001" "011101111100101" "010000010000001" "011110111001110" "011111000001110" "011000010101010" "000011101111100" "000110110000111" "000011000111000" "000011000101010" "000000110110110" "001100101111110" "000001010110010" "001000110110000" "011011110001111" "001001101101010" "010011000111110" "011011111010001" "000010110100011" "000011000010000" "011000101010010" "010110101110011" "000011111110110" "001001011001101" "001010100011001" "001100000010100" "011001011000011" "011001011000001" "100010100011110" "010110000010110" "010000000111001" "001010111111110" "000001111101010" "001001000101100" "001000011010001" "001110110011101" "011000000110001" "000011100100111" "100011000101000" "000101110011001" "010111011000000" "001111110000001" "000001111010001" "001110111100111" "011111000111100" "010110100001011" "011011001100100" "000110000010010" "010001110101000" "001011101100111" "000110100010001" "011011010011111" "001000110100000" "001011110011111" "011000011111110" "011001111110111" "010110001000100" "010111100100010" "010110000000101" "011111001101010" "100000001101010" "001110101001011" "011101111100000" "011111000110101" "000000011010111" "011100010100101" "010101111101100" "000101101010000" "010111101111110" "010110010111001" "100001000010011" "000100000010011" "001111101000011" "000110101011001" "010111000100100" "001110011101011" "000100010010011" "011011000101110" "000001011111110" "001011100100110" "011110000010110" "001100110111010" "001100111000010" "000101011110000" "100010000110010" "010001001111101" "100001100010001" "001101111111011" "011110001010101" "001110010011000" "000010101111001" "010110000001111" "000000010111011" "100011101011111" "011010011110000" "010001001111011" "010010101111111" "010010111111011" "010010001000111" "011001111110001" "001101110001111" "001110001111110" "011010100010101" "010001001001001" "001001001000111" "000001010100110" "000111111001011" "100000001010111" "000100100011001" "001100011011001" "000101101000111" "000001111110110" "000111101010110" "011011000011001" "011010010000110" "001100100001110" "000001011011001" "011010111000000" "010000010110111" "010011110010000" "010111111110001" "100011110101100" "010011101010101" "011100110101100" "010110000110101" "011000111100001" "100010101101100" "000000000100100" "001110000111101" "010011111010111" "001000110100001" "000001010011000" "001100011010000" "001011011001001" "011010100100100" "001100000111111" "010011001111101" "011101010101111" "011100101011011" "010011100101111" "011010111011100" "000101001010100" "100000111010110" "001111100001110" "001111110011110" "000000101111101" "001000011010111" "010110011000010" "011011100100010" "000001101110011" "001011010010110" "000101010101001" "001101010000001" "000010111101011" "000011001001100" "011110010011101" "001000011010011" "000110100100110" "000110000100011" "010001110011101" "000010011110101" "001101011100101" "011011001001000" "000100011010101" "001001101101101" "100000000001000" "100000100100011" "010111110101100" "100010001000011" "010100011111010" "100011111100001" "000111100111100" "011101011111100" "001001111000000" "000110110110010" "010010110110101" "000100101011111" "011110000001001" "011110010111110" "001111101110011" "000110011010110" "011001101000010" "010000001001100" "100001000000111" "011101111110001" "100011011100111" "000011011010000" "010000111000110" "001100110000111" "000001110101111" "010110110100110" "100010100010101" "001110101001110" "000010001000011" "000000110111011" "011001000011101" "001010001111011" "000111010011010" "010011111101011" "011111100001011" "100010010110010" "011000101110101" "011100010110110" "001001010111011" "010101011111011" "010100000101001" "000010111110010" "011110100111001" "001001100101111" "100000111001000" "100000010000111" "100000100101001" "001000111010000" "001110100111100" "011011000011100" "011100001011001" "000000001001111" "000010010111101" "000010101101100" "001011100111111" "100010110110010" "000011101100100" "010010000000000" "000101110001100" "100011010001110" "000111100011110" "010111101110100" "000110011110111" "010010101000110" "011111011010001" "000001100110011" "000000101100010" "011000110101010" "001001110111101" "010100101011000" "000000110000001" "000001111111010" "001010000001011" "010101010000110" "010011100010100" "000111010101110" "100011001110100" "010001010011101" "011100010111101" "010011010111111" "000001101100110" "010111001100100" "100010010100101" "001110101110101" "010100001010011" "011001011100100" "001101000001011" "100011101001011" "001011110111000" "011101010011010" "001111001011100" "100000000000001" "011000010000100" "001010110101110" "010011111101111" "000110001110100" "001111011001100" "011111111011010" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 138
set hasByteEnable 0
set MemName mq_iNTT_ternary_iBew
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "000110011110110" "000001101101111" "001101001001010" "010100001101011" "010000110000110" "001011001001111" "000111101010100" "011000101110011" "001011011000000" "010001111010000" "001110111101111" "100001001001111" "100010011011011" "010100101010101" "001010111100101" "000011010010011" "001000011000010" "000000010101010" "010011100010110" "011011110011000" "010110001110000" "001101001101111" "100011110111001" "010010010111111" "010110100010011" "010110001000000" "100000011100010" "100000101011000" "001101110010101" "000111110000111" "100001011010001" "010010110111010" "100000010110100" "000111011010001" "010001100100011" "100011010001011" "001011100111101" "000111100000101" "000001100001011" "100011101110100" "001111101010001" "010001110100110" "011011111011011" "011001110111010" "000000000010000" "001011111010110" "011001000100001" "000100111100000" "000011000001000" "100010000001100" "011000100101110" "001000011100011" "001100111000011" "001011101011000" "011011111100100" "010011000100010" "010101010000011" "000001100000111" "001100110110101" "001010001111101" "010100110100010" "011011011011011" "010110101001111" "001100110100001" "000010010011000" "001011111011001" "011000001000111" "000010111000110" "010010100101000" "011100110110011" "001110000000101" "010011001011111" "001101001101001" "010010010100001" "010110011110011" "100010010010101" "010101110100110" "100001110000110" "011101111100001" "011100000010101" "010111100101100" "001100100110011" "011001010111110" "010010011000001" "001000010100001" "011001010000010" "000110000110011" "010001100111010" "000010000000000" "000110101101011" "010100000010100" "011011111111000" "010111010001111" "100011001010011" "011000101100001" "000101111011100" "010010110101000" "010000001100000" "100010100001000" "010110101011110" "011111100011001" "011101110010001" "001010100000101" "010000011100100" "010010010111010" "011011111010110" "010001001100111" "010101001111100" "100010101001011" "100000000101101" "000110011000111" "000001110110010" "001010101000110" "001111010111000" "010101010110100" "011000100000110" "100000111000111" "011011101111010" "001001100101110" "001100001000010" "100011000000100" "001100011000011" "010111111011101" "010110111011111" "001001010110010" "001001110001010" "000100011111111" "000000110110011" "011000001000000" "010100001011001" "010000101101011" "011111100010111" "011111000010110" "010101010111110" "000111100011010" "001000100001100" "011010000010100" "001100000111000" "011110110100110" "001001111100110" "010110100001100" "000011011010010" "000001001110011" "011110100000110" "011010000101101" "010001001110110" "001101101111000" "010001101010100" "010111011010001" "010101010100100" "001111100100110" "011010010011000" "100001101111100" "100001101110110" "100010111000001" "000010111110100" "001100010101100" "000110010111010" "000010101010000" "000100111110010" "100001101000110" "000010100000100" "100011110010100" "010110010100001" "011110100101100" "010010000101001" "010111100000010" "001000010100010" "000100100111100" "001110110010010" "000100000100101" "001001011110100" "001101000110011" "010111000110000" "010111011000110" "010001101000001" "010000000000000" "010001101010111" "010000010011100" "000111110111010" "000110001110011" "011101010010001" "010001100000011" "001011011011111" "011110100000111" "010110000001011" "001100110010111" "100000111001101" "010110111101011" "000011000000100" "011100110010110" "011011010100110" "001000110001010" "000101010011001" "011010110101010" "010001100000110" "011101010011000" "001100011111011" "000110101001101" "010100101010000" "000010010110101" "000010000001100" "000100010100001" "001011110101100" "100011011100100" "100011001110011" "001110110100001" "010100000011101" "001101011001010" "000101000100000" "011100001010111" "011100001110010" "010110011000001" "011000000011001" "010000011111100" "000111010111100" "001010010101001" "000001111010111" "010100101010111" "001100000100001" "001000100111001" "011110011110000" "001010001100110" "011100100001001" "000110101001001" "100011101011011" "001111001110011" "000101011110001" "011001010100011" "000010110001000" "011111000011101" "000100000101011" "000001011011000" "000010001111010" "000110010111110" "001000101001010" "011100101001010" "011000101101111" "010010111101011" "011001100101111" "010110000010111" "100000011011011" "011000101100101" "011010111010010" "001110111101000" "001110011100001" "010110101100010" "010110011101111" "100001011101011" "001011001110101" "011001111111100" "011110001111000" "000000000000010" "001010011111011" "100010101000101" "000000100111100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 139
set hasByteEnable 0
set MemName mq_iNTT_ternary_ICeG
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 10
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "000000000000000" "000000000000000" "100001010101011" "100010101010110" "010001010101011" "011010101010110" "001101010101011" "011000101010110" "001100010101011" "011000001010110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 140 \
    name a \
    reset_level 1 \
    sync_rst true \
    dir IO \
    corename a \
    op interface \
    ports { a_address0 { O 10 vector } a_ce0 { O 1 bit } a_we0 { O 1 bit } a_d0 { O 16 vector } a_q0 { I 16 vector } a_address1 { O 10 vector } a_ce1 { O 1 bit } a_we1 { O 1 bit } a_d1 { O 16 vector } a_q1 { I 16 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'a'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 141 \
    name logn \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_logn \
    op interface \
    ports { logn { I 4 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


